
<article>
    <div id="btn-container" class="btn-container">
        <svg
        id="play" 
        width="28"
        height="28"
        viewBox="0 0 24 24"
        fill="currentColor"
        class="duration-300 icon icon-tabler icons-tabler-filled icon-tabler-player-play"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M6 4v16a1 1 0 0 0 1.524 .852l13 -8a1 1 0 0 0 0 -1.704l-13 -8a1 1 0 0 0 -1.524 .852z" /></svg>
        <svg
        id="pause" 
        width="28"
        height="28"
        viewBox="0 0 24 24"
        fill="currentColor"
        class="pressed duration-300 icon icon-tabler icons-tabler-filled icon-tabler-player-pause"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M9 4h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h2a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2z" /><path d="M17 4h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h2a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2z" /></svg>
    </div>
    <div class="progress-bar">
        <input type="range" id="progressBar" value="0" min="0" step="1" />
    </div>
</article>

<style>
    article {
        width: 100%;
        box-sizing: border-box;
        padding: 0.25rem 0;
        height: 3rem;
        color: var(--gray);
        display: flex;
        align-items: center;
        justify-content: center;
        margin: -2rem 0 0;

        #btn-container {
            height: 100%;
            width: auto;
            display: grid;
        }

        svg {
            height: 100%;
            width: auto;
            cursor: pointer;
            transition: transform 0.3s ease;
            grid-column: 1/1;
            grid-row: 1/1;
        }

        input[type="range"] {
            -webkit-appearance: none; /* Quita el estilo por defecto en Chrome/Safari */
            width: 100%;
            height: 6px;
            background: transparent; /* Para que no interfiera con el track personalizado */
        }

        /* Estilo de la barra (track) */
        input[type="range"]::-webkit-slider-runnable-track {
            height: 6px;
            background: var(--gray); /* Color de la barra */
            border-radius: 3px;
        }

        input[type="range"]::-moz-range-track {
            height: 6px;
            background: var(--gray);
            border-radius: 3px;
        }

        /* Estilo del "círculo" o thumb */
        input[type="range"]::-webkit-slider-thumb {
            -webkit-appearance: none;
            height: 20px;
            width: 20px;
            background: var(--gray); /* Color del círculo */
            border-radius: 50%;
            cursor: pointer;
            margin-top: -7px; /* Alinear verticalmente */
        }

        input[type="range"]::-moz-range-thumb {
            height: 20px;
            width: 20px;
            background: var(--gray);
            border: none;
            border-radius: 50%;
            cursor: pointer;
        }

        /* Para Firefox: eliminar el borde */
        input[type="range"]::-moz-focus-outer {
            border: 0;
        }
    }

    @media (width <= 768px) {
        article {
            margin: -4rem 0 0;
        }
        
    }
</style>


<script >
    const url = "sounds/cant_help_falling_in_love.mp3";

document.addEventListener('DOMContentLoaded', () => {
    const btnPlay = document.getElementById('play')!
    const btnPause = document.getElementById('pause')!
    const progressBar = document.getElementById('progressBar') as HTMLInputElement;

    const audio: HTMLAudioElement = new Audio(url);

    const playMusic = () => {
        btnPlay.style.transform = "scale(0)";
        btnPause.style.transform = "scale(1)";
        audio.play();
    };

    const pauseMusic = () => {
        audio.pause();
        btnPlay.style.transform = "scale(1)";
        btnPause.style.transform = "scale(0)";
    };

    // Configura duración máxima cuando se cargan los metadatos
    audio.addEventListener('loadedmetadata', () => {
        progressBar.max = audio.duration.toString();
    });

    // Actualiza el valor de la barra mientras suena
    audio.addEventListener('timeupdate', () => {
        progressBar.value = audio.currentTime.toString();
    });

    // Permite saltar al momento elegido sin pausar
    progressBar.addEventListener('input', () => {
        audio.currentTime = parseFloat(progressBar.value);
    });

    // Al terminar la canción, vuelve a estado inicial
    audio.addEventListener('ended', () => {
        pauseMusic();
        audio.currentTime = 0;
        progressBar.value = "0";
    });

    btnPause.addEventListener('click', pauseMusic);
    btnPlay.addEventListener('click', playMusic);

    // Inicia en play automáticamente
    playMusic();
});


</script>